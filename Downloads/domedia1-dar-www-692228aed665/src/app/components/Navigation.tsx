"use client";

import React, { useLayoutEffect } from "react";
import Container from "./Container";
import Image from "next/image";
import Link from "next/link";
import { pages } from "@/constants";
import { usePathname } from "next/navigation";
import { twMerge } from "tailwind-merge";
import { AdsResponse } from "../actions";
import useAdsStore from "@/store/ads";

export const Navigation = ({ banners }: { banners: AdsResponse | null }) => {
	const pathname = usePathname();
	const setAds = useAdsStore((s) => s.setAds);
	useLayoutEffect(() => {
		if (banners) setAds(banners);
	}, []);

	// console.log({ banners });
	return (
		<header>
			<TopBanner />
			<Container className="py-4">
				<div className="flex items-center gap-6">
					<Link href={"/home"} className="">
						<svg
							width="87"
							height="51"
							viewBox="0 0 87 51"
							fill="none"
							xmlns="http://www.w3.org/2000/svg"
						>
							<path
								d="M30.5993 34.8612H26.4084C25.1831 34.8612 24.1964 33.8483 24.1964 32.6029V3.57176C24.1964 2.32085 25.1886 1.31348 26.4084 1.31348H30.5993C31.8192 1.31348 32.8113 2.32638 32.8113 3.57176V32.6029C32.8113 33.8538 31.8192 34.8612 30.5993 34.8612Z"
								fill="#1A1C43"
							/>
							<path
								d="M85.1892 34.9997H80.2014C79.1984 34.9997 78.3851 34.1695 78.3851 33.1455V1.85606C78.3797 0.832083 79.1929 0.00183105 80.1959 0.00183105H85.1838C86.1868 0.00183105 87 0.832083 87 1.85606V33.151C87 34.175 86.1868 35.0053 85.1838 35.0053"
								fill="#1A1C43"
							/>
							<path
								d="M26.2837 48.4057H24.5542V43.2692H25.3295V47.6862H26.2837V48.4057ZM28.9674 48.4057H26.0723V47.6862H28.9674V48.4057ZM28.756 48.4057V47.6862H29.5692V46.5515C29.5692 46.0589 29.6885 45.677 29.927 45.4057C30.1656 45.1345 30.5071 45.0017 30.9571 45.0017C31.4071 45.0017 31.7324 45.1235 31.9655 45.3725C32.1987 45.6216 32.3179 45.9758 32.3179 46.4353C32.3179 46.7065 32.2637 46.9445 32.1499 47.1603C32.0414 47.3762 31.8788 47.5533 31.6728 47.6862H33.0824V48.4057H31.9601C32.0902 48.4777 32.1987 48.5773 32.2746 48.6991C32.3505 48.8264 32.3884 48.9592 32.3884 49.1031C32.3884 49.402 32.2746 49.629 32.0414 49.7895C31.8083 49.95 31.4776 50.033 31.0439 50.033C30.0571 50.033 29.5638 49.5681 29.5638 48.6437V48.4057H28.7505H28.756ZM31.0222 49.402C31.4505 49.402 31.6619 49.2526 31.6619 48.9537C31.6619 48.771 31.5752 48.6327 31.4071 48.5275C31.2336 48.4279 30.9951 48.378 30.6915 48.378H30.312V48.5773C30.312 49.1253 30.5505 49.3965 31.0222 49.3965M31.5427 46.546C31.5427 45.9592 31.3475 45.6659 30.9517 45.6659C30.7403 45.6659 30.583 45.7268 30.4854 45.8541C30.3879 45.9814 30.3391 46.1751 30.3391 46.4463V47.7138H30.5234C30.8324 47.7138 31.0818 47.6087 31.2661 47.3928C31.4505 47.1769 31.5427 46.8947 31.5427 46.546ZM35.7715 48.4057H32.8764V47.6862H35.7715V48.4057ZM35.5113 48.9592H36.2215V49.6843H35.5113V48.9592ZM35.56 47.6862H36.5197V45.1179H37.2895V47.6862H38.2492V48.4057H35.5655V47.6862H35.56ZM36.5956 48.9592H37.3004V49.6843H36.5956V48.9592ZM40.9328 48.4057H38.0377V47.6862H40.9328V48.4057ZM44.4081 46.629V48.4057H40.7214V47.6862H41.9141C41.7461 47.5699 41.6105 47.4094 41.5075 47.1991C41.4045 46.9888 41.3557 46.7618 41.3557 46.5238C41.3557 46.2305 41.4208 45.9703 41.5455 45.7434C41.6702 45.5164 41.8545 45.3338 42.0931 45.2065C42.3316 45.0736 42.6027 45.0072 42.9117 45.0072C43.4051 45.0072 43.7792 45.1456 44.0286 45.4168C44.278 45.688 44.4081 46.0976 44.4081 46.6345M43.6328 47.6862V46.5902C43.6328 46.2692 43.5731 46.0312 43.4539 45.8873C43.3346 45.7378 43.1503 45.6659 42.9009 45.6659C42.6515 45.6659 42.4617 45.7489 42.3262 45.9094C42.1906 46.0699 42.1256 46.3024 42.1256 46.6013C42.1256 46.9445 42.2178 47.2102 42.4075 47.3983C42.5973 47.5921 42.8629 47.6862 43.2045 47.6862H43.6328ZM42.5159 43.7231H43.237V44.4648H42.5159V43.7231ZM48.9188 48.4057H47.1893V43.2692H47.9646V47.6862H48.9188V48.4057ZM51.6025 48.4057H48.7074V47.6862H51.6025V48.4057ZM52.2368 46.629C52.2368 46.1032 52.367 45.6991 52.6326 45.4223C52.8983 45.1456 53.2778 45.0072 53.7766 45.0072C54.2428 45.0072 54.6115 45.1511 54.8826 45.439C55.1537 45.7268 55.2892 46.1142 55.2892 46.5958C55.2892 47.1769 55.1103 47.6253 54.7579 47.9352C54.4055 48.2507 53.9013 48.4057 53.2453 48.4057H51.3911V47.6862H52.2368V46.629ZM54.5193 46.6013C54.5193 46.3024 54.4543 46.0755 54.3241 45.9094C54.194 45.7489 54.0151 45.6659 53.7766 45.6659C53.2669 45.6659 53.0067 45.9759 53.0067 46.5958V47.6917H53.3808C53.7495 47.6917 54.0314 47.5976 54.2266 47.415C54.4217 47.2323 54.5139 46.9611 54.5139 46.6068M59.0409 48.45C59.0409 48.9648 58.9162 49.3467 58.6723 49.5957C58.4283 49.8448 58.0434 49.9721 57.5337 49.9721C57.0837 49.9721 56.7259 49.867 56.4711 49.6566C56.2109 49.4463 56.0591 49.1363 56.0048 48.7268H56.7639C56.8018 48.926 56.8831 49.0699 57.0078 49.164C57.1325 49.2581 57.3114 49.3024 57.5391 49.3024C57.8048 49.3024 57.9891 49.2415 58.0976 49.1142C58.206 48.9869 58.2656 48.7766 58.2656 48.4832V48.4057H58.0271C57.3711 48.4057 56.8615 48.2507 56.509 47.9352C56.1566 47.6253 55.9832 47.1769 55.9832 46.6068C55.9832 46.1142 56.1241 45.7212 56.406 45.4334C56.688 45.1456 57.0675 45.0017 57.55 45.0017C58.0325 45.0017 58.4174 45.1401 58.6668 45.4057C58.9162 45.6714 59.0463 46.081 59.0463 46.6179V48.4445L59.0409 48.45ZM56.753 46.6013C56.753 46.9555 56.8506 47.2268 57.0404 47.4094C57.2355 47.5921 57.5175 47.6862 57.8861 47.6862H58.2602V46.5847C58.2602 46.2637 58.2006 46.0312 58.0867 45.8818C57.9675 45.7378 57.7831 45.6604 57.5229 45.6604C57.2626 45.6604 57.0837 45.7434 56.9536 45.9039C56.8235 46.0644 56.7584 46.2969 56.7584 46.5958M64.739 47.6862H65.5848V48.4057H63.7306C63.0746 48.4057 62.565 48.2507 62.2126 47.9352C61.8601 47.6253 61.6867 47.1769 61.6867 46.6068C61.6867 46.1142 61.8276 45.7212 62.1041 45.4334C62.386 45.1456 62.7656 45.0017 63.2481 45.0017C64.2402 45.0017 64.7336 45.5441 64.7336 46.6234V47.6862H64.739ZM62.3318 43.7286H63.0421V44.4648H62.3318V43.7286ZM62.4674 46.6013C62.4674 46.9611 62.565 47.2323 62.7547 47.415C62.9499 47.5976 63.2318 47.6862 63.6005 47.6862H63.9746V46.7563C63.9746 46.3522 63.9204 46.0699 63.8065 45.9094C63.6981 45.7489 63.5029 45.6659 63.2318 45.6659C62.9824 45.6659 62.7927 45.7489 62.6625 45.9094C62.5324 46.0699 62.4674 46.3024 62.4674 46.6013ZM63.4161 43.7286H64.1209V44.4648H63.4161V43.7286ZM68.2739 48.4057H65.3788V47.6862H68.2739V48.4057ZM69.7974 45.9316C69.9871 45.6271 70.2202 45.4002 70.5076 45.2397C70.7949 45.0792 71.1148 45.0017 71.4726 45.0017C72.0365 45.0017 72.4648 45.1677 72.7575 45.4943C73.0503 45.8209 73.1967 46.3024 73.1967 46.9389V47.6862H74.0587V48.4057H68.0624V47.6862H69.0275V45.1179H69.7974V45.9316ZM71.3967 45.688C70.8979 45.688 70.5076 45.8375 70.2148 46.1308C69.9275 46.4242 69.7811 46.8282 69.7811 47.343V47.6862H72.4322V47.1105C72.4322 46.6234 72.3509 46.2637 72.1828 46.0312C72.0148 45.7987 71.7545 45.688 71.3967 45.688ZM76.7424 48.4057H73.8473V47.6862H76.7424V48.4057ZM81.0634 48.4057H76.531V47.6862H77.7237C77.5556 47.5699 77.4201 47.4094 77.3171 47.1991C77.2141 46.9888 77.1653 46.7618 77.1653 46.5238C77.1653 46.2305 77.2303 45.9703 77.355 45.7434C77.4797 45.5164 77.6641 45.3338 77.9026 45.2065C78.1412 45.0736 78.4122 45.0072 78.7213 45.0072C79.2146 45.0072 79.5887 45.1456 79.8381 45.4168C80.0875 45.688 80.2176 46.0976 80.2176 46.6345V47.6917H81.0634V48.4113V48.4057ZM77.8159 43.7286H78.5261V44.4648H77.8159V43.7286ZM79.4423 47.6862V46.5902C79.4423 46.2692 79.3827 46.0312 79.2634 45.8873C79.1442 45.7378 78.9598 45.6659 78.7104 45.6659C78.461 45.6659 78.2713 45.7489 78.1357 45.9094C78.0002 46.0699 77.9351 46.3024 77.9351 46.6013C77.9351 46.9445 78.0273 47.2102 78.2171 47.3983C78.4068 47.5921 78.6725 47.6862 79.014 47.6862H79.4423ZM78.9002 43.7286H79.605V44.4648H78.9002V43.7286ZM83.7525 48.4057H80.8574V47.6862H83.7525V48.4057ZM83.5411 47.6862H84.5007V43.2692H85.2705V48.4057H83.5411V47.6862ZM86.2031 43.2692H86.9783V48.4057H86.2031V43.2692Z"
								fill="#DF3C37"
							/>
							<path
								d="M73.9666 0.367142C73.6792 0.123601 73.3431 0.00183105 72.9582 0.00183105H67.2113C66.8263 0.00183105 66.4956 0.123601 66.2029 0.367142C65.9155 0.610683 65.7691 0.898504 65.7691 1.22507V24.1068C65.7691 25.0699 65.0589 25.8836 64.0613 26.1991H57.5229V21.4389C57.5229 19.2028 57.1868 17.2766 56.5091 15.6604C55.8314 14.0442 54.9151 12.7102 53.7495 11.6641C52.5838 10.618 51.223 9.84309 49.6616 9.34494C48.1002 8.84679 46.4087 8.59771 44.5924 8.59771C42.413 8.59771 40.1522 8.94088 37.8046 9.62722C37.1052 9.83202 36.6823 10.5626 36.8558 11.2822L38.0486 16.1918C38.2221 16.9113 38.9215 17.3541 39.6317 17.2047C40.0491 17.1161 40.4666 17.0441 40.8895 16.9833C41.7298 16.8615 42.5431 16.8061 43.3346 16.8061C44.9177 16.8061 46.284 17.1493 47.4225 17.8412C48.5665 18.5331 49.1357 19.7342 49.1357 21.4445V25.0644C49.1357 25.8227 48.5339 26.4371 47.7912 26.4371H36.5034C35.7607 26.4371 35.1589 27.0515 35.1589 27.8098V33.6271C35.1589 34.3853 35.7607 34.9997 36.5034 34.9997H71.3534C72.9582 34.9997 74.2702 33.7322 74.384 32.1215C74.3895 32.0551 74.3949 31.9942 74.3949 31.9278V1.22507C74.3949 0.898504 74.2539 0.610683 73.9666 0.367142Z"
								fill="#1A1C43"
							/>
							<path
								d="M18.6665 16.8448H15.4569C13.9605 16.8448 12.7515 18.0846 12.7515 19.6068V24.9425V33.5495C12.7515 35.3041 12.2256 36.5107 11.1684 37.1583C10.1166 37.8059 9.48229 38.1269 8.04557 38.1269C6.99378 38.1269 5.92573 37.9886 4.84684 37.7118C4.20709 37.5457 3.59445 37.3742 2.99808 37.197C2.3258 36.9922 1.61015 37.3576 1.38787 37.9996L0.0649996 41.9018C-0.135599 42.4941 0.140902 43.1417 0.721011 43.4129C2.16315 44.0992 3.61614 44.6361 5.07454 45.0291C6.86909 45.5162 7.99135 45.7597 9.66662 45.7597C11.3419 45.7597 12.8166 45.5162 14.2262 45.0291C15.6412 44.542 16.8719 43.8059 17.9237 42.8095C18.9755 41.8132 19.8158 40.5568 20.4393 39.0291C21.0628 37.5015 21.3718 35.6749 21.3718 33.5495V19.6068C21.3718 18.0791 20.1628 16.8448 18.6665 16.8448Z"
								fill="#1A1C43"
							/>
							<path
								d="M82.3917 15.5885L72.6491 9.84314C71.7003 9.2841 70.513 9.98151 70.513 11.0996V22.5847C70.513 23.7028 71.7003 24.4002 72.6491 23.8412L82.3917 18.0958C83.3405 17.5368 83.3405 16.1365 82.3917 15.5774"
								fill="white"
							/>
						</svg>
					</Link>
					<nav className="flex-1">
						<ul className="flex flex-row gap-4 whitespace-nowrap lg:justify-between lg:w-full">
							{pages.map((page) => {
								const hasChild = page.children?.length > 0;

								return (
									<li
										key={page.slug}
										className={`relative ${
											hasChild ? "group" : ""
										}`}
									>
										{!hasChild ? (
											<Link
												href={page.href}
												className={twMerge(
													"hover:underline block py-2 px-3",
													pathname.includes(
														`${page.slug}`
													)
														? "font-extrabold"
														: ""
												)}
											>
												{page.arName}
											</Link>
										) : (
											<>
												<Link
													href={page.href}
													className={twMerge(
														"flex items-center gap-2 py-2 px-3 hover:underline hover:cursor-pointer",
														pathname.includes(
															`${page.slug}`
														)
															? "font-extrabold"
															: ""
													)}
												>
													{page.arName}
													<svg
														width="8"
														height="5"
														viewBox="0 0 8 5"
														fill="none"
														xmlns="http://www.w3.org/2000/svg"
													>
														<path
															d="M3.75 4.23806L0 0.801796L0.875 0L3.75 2.63447L6.625 0L7.5 0.801796L3.75 4.23806Z"
															fill="#1D1B20"
														/>
													</svg>
												</Link>

												<ul className="absolute right-0 z-10 hidden w-40 bg-white shadow-md group-hover:block text-right border border-[#00018F] group-hover:cursor-pointer">
													{page.children.map(
														(child) => (
															<li
																key={child.slug}
															>
																<Link
																	href={`${child.href}`}
																	className="block px-4 py-2 hover:bg-gray-100"
																>
																	{
																		child.arName
																	}
																</Link>
															</li>
														)
													)}
												</ul>
											</>
										)}
									</li>
								);
							})}
						</ul>
					</nav>

					<div>
						<Image
							src={"/ain_logo.png"}
							alt="Ain Fm Logo"
							width={133}
							height={60}
						/>
					</div>
					<div>
						<div>
							<Link
								href={"/"}
								className="flex items-center gap-3 justify-between hover:underline"
							>
								شاهدنا الآن
								<Image
									src={"/play-btn.png"}
									alt="Play button"
									width={15}
									height={15}
								/>
							</Link>
						</div>

						<div>
							<Link
								href={"/"}
								className="flex items-center gap-3 justify-between hover:underline"
							>
								إستمع الآن
								<Image
									src={"/play-btn.png"}
									alt="Play button"
									width={15}
									height={15}
								/>
							</Link>
						</div>
					</div>
				</div>
			</Container>
		</header>
	);
};

const TopBanner = () => {
	const { topBanner } = useAdsStore();
	if (topBanner) {
		return (
			<section className=" bg-gray-200">
				<Container fluid className=" py-4">
					<Image
						src={topBanner?.s3_url}
						width={topBanner.width}
						height={topBanner.height}
						alt="Ads"
						className="mx-auto"
					/>
				</Container>
			</section>
		);
	}
	return null;
};
